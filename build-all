#! /bin/bash

usage() {
    echo <<EOT
Usage: $0 ARCH [PACKAGE TO SKIP]...

Builds all the GTK+ MinGW toolchain, skipping the packages that
have been previously compiled (that is, the directories still
containing a .pkg.tar.xz file).

You must supply the architecture as first argument, e.g. "i686"
for the 32 bits toolchain or "x86_64" for the 64 bits one.

A list of packages to skip can be optionally specified on the
command line. This feature is intended to be used when you want
to build by yourself one ore more packages.
EOT
}

case "$1" in
    i686|x86_64)
        arch=$1
        shift
        ;;
    *)
        usage
esac

function exists() {
    [[ -f $1 ]]
}

function found() {
    local needle="$1"
    shift
    while : ; do
        haystack=$1
        shift || return 1
        [[ "$haystack" = "$needle" ]] && return 0
    done
}

function pacman_frontend() {
    LC_MESSAGES=C yaourt "$@" > /dev/null 2>&1
    return $?
}

function install() {
    # TODO: is there a more elegant way to force the removing
    #       of conflicting packages?
    if ! yes | pacman_frontend -U --needed *.pkg.tar.xz; then
        exit 1
    fi
}

function upgrade() {
    local pkg=$1
    local dir=$2
    shift 2

    echo "Upgrading $pkg..."
    # Skip the building if the package has already been built
    if ! exists "$dir"/$pkg-*.pkg.tar.xz; then
        cd "$dir"
        LC_MESSAGES=C makepkg "$@"
        install

        # The tarball links (*.pkg.tar.xz) are not deleted: it is
        # convenient to keep them around to avoid rebuilding the same
        # package and to easily update the repo database, i.e. by using
        # a command such as `repo-add <path-to-db> */*.pkg.tar.xz`
        rm -fr pkg src

        cd ..
    fi
}

dependencies=(
    # From core
    glib2               # Required by gobject-introspection

    # From extra
    cmake               # Required by libjpeg and win-iconv
    scons               # Required by nsis
    nasm                # Required by libjpeg-turbo
    python              # Required by glib2 and libepoxy
    python2             # Required by glib2 and gobject-introspection
    intltool            # Required by adwaita-icon-theme
    xorg-util-macros    # Required by libepoxy
    gtk-doc             # Required by pango

    # From multilib
    wine                # Required by gobject-introspection

    # From community
    mingw-w64-gcc
    mingw-w64-binutils  # Required by cairo

    # From AUR
    mingw-w64-tools     # Required by cairo and harfbuzz
)
pkgs=(
	$1
)

<<<<<<< HEAD
xbuild=(
    # GTK+2/3 dependencies
    fedora-mingw-w64-zlib
    fedora-mingw-w64-bzip2
    fedora-mingw-w64-termcap
    fedora-mingw-w64-win-iconv
    fedora-mingw-w64-gettext
    fedora-mingw-w64-expat
    fedora-mingw-w64-libxml2
    fedora-mingw-w64-libpng
    fedora-mingw-w64-libjpeg-turbo
    fedora-mingw-w64-libffi
    fedora-mingw-w64-pcre       # Required by glib >= 2.47.5
    fedora-mingw-w64-glib2

    # Let us compile introspection early in order
    # to be able to enable it on other projects
    afm-mingw-w64-gobject-introspection

    fedora-mingw-w64-freetype
    fedora-mingw-w64-fontconfig
    fedora-mingw-w64-pixman
    fedora-mingw-w64-icu
    fedora-mingw-w64-cairo
    fedora-mingw-w64-gdk-pixbuf
    fedora-mingw-w64-atk
    fedora-mingw-w64-harfbuzz
    fedora-mingw-w64-pango
    fedora-mingw-w64-gtk2
    fedora-mingw-w64-libepoxy   # Required by gtk3 >= 3.16.0
                                # Required by gtk3 >= 3.16.0
    fedora-mingw-w64-gtk3

    # LGI (dynamic Lua bindings) support
    afm-mingw-w64-lua
    afm-mingw-w64-lua-lgi
)

# Install required dependencies
for pkg in ${dependencies[@]}; do
    echo "Upgrading $pkg..."
    if ! pacman_frontend -Sa --needed --noconfirm "$pkg"; then
        exit 1
    fi
done

# Base system: must be installed now because everything depends on it
upgrade afm-mingw-w64-makedepends afm-mingw-w64-makedepends --config ./makepkg.native.conf

# Adwaita icon theme is architecture independent
upgrade afm-mingw-w64-adwaita-icon-theme fedora-mingw-w64-adwaita-icon-theme --config /usr/share/mingw/makepkg.native.conf

# Cross compilation of the toolchain
for dir in ${xbuild[@]}; do
    # Install only packages *not* passed in as arguments
    if ! found "$dir" "$@"; then
        pkg=${dir#afm-}
        pkg="$arch-${pkg#fedora-}"
        upgrade "$pkg" "$dir" --config /usr/share/mingw/makepkg.$arch.conf
    fi
=======
# Avoid using standard flags: too easy to rebuild everything with the
# wrong flags. Instead allow overriding via AFM_... custom variables.
export CFLAGS=$AFM_CFLAGS
export CPPFLAGS=$AFM_CPPFLAGS
export LDFLAGS=$AFM_LDFLAGS
export CXXFLAGS=$AFM_CXXFLAGS

for pkg in ${pkgs[@]}; do
	#found "$pkg" "$@" && continue
	if [ ! -d "$pkg" ]; then
	    # No package directory found: try to build from AUR
	    if ! yaourt -Sa --needed --noconfirm "$pkg"; then exit 1; fi
	elif [ -z "$(find "$pkg" -maxdepth 1 -name '*.pkg.tar.xz')" ]; then
	    # The directory exists and does not contain any .pkg.tar.xz
	    # file: build the package with makepkg
	    cd "$pkg"
	    makepkg -f

	    # TODO: is there a more elegant way to force the removing
	    #       of conflicting packages?
	    if ! yes | LC_MESSAGES=C yaourt -U *.pkg.tar.xz; then exit 1; fi

	    # The tarball links (*.pkg.tar.xz) are not deleted: it is
	    # convenient to keep the on place to easily update package
	    # databases, i.e. using a command such as
	    # repo-add <path-to-db> */*.pkg.tar.xz
	    rm -fr pkg src
	    cd ..
	fi
>>>>>>> enable single pkg build
done

# The nsis installer must be compiled natively
upgrade afm-mingw-w64-nsis fedora-mingw-w64-nsis --config /usr/share/mingw/makepkg.native.conf
